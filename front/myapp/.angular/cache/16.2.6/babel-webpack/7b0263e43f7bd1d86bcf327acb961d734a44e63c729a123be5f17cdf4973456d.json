{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.endpoint = 'http://localhost:4000/api';\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.currentUser = {};\n  }\n  // inscription\n  signup(user) {\n    let api = `${this.endpoint}/register-user`;\n    return this.http.post(api, user).pipe(catchError(this.handleError));\n  }\n  // connexion\n  signin(user) {\n    return this.http.post(`${this.endpoint}/signin`, user).subscribe(res => {\n      localStorage.setItem('access_token', res.token);\n      this.currentUser = this.getUserProfile(res._id);\n      this.router.navigate(['/profile/' + res.msg._id]);\n    });\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  get isLoggedIn() {\n    let authToken = this.getToken();\n    return authToken !== null;\n  }\n  doLogout() {\n    localStorage.removeItem('access_token');\n    this.router.navigate(['/connexion']);\n  }\n  // Récupère le profile utilisateur\n  getUserProfile(id) {\n    let api = `${this.endpoint}/user-profile/${id}`;\n    return this.http.get(api, {\n      headers: this.headers\n    }).subscribe(res => {\n      return res || {};\n    });\n  }\n  handleError(error) {\n    let msg;\n    if (error.error instanceof ErrorEvent) {\n      msg = error.error.message;\n    } else {\n      msg = `Error code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(() => new Error(msg));\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","AuthService","constructor","http","router","endpoint","headers","set","currentUser","signup","user","api","post","pipe","handleError","signin","subscribe","res","localStorage","setItem","token","getUserProfile","_id","navigate","msg","getToken","getItem","isLoggedIn","authToken","doLogout","removeItem","id","get","error","ErrorEvent","message","status","Error","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcran\\Desktop\\angular-jwt\\front\\myapp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../models/user\";\r\nimport { Observable, catchError, throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService\r\n{\r\n  endpoint: string = 'http://localhost:4000/api'\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json')\r\n  currentUser = {}\r\n\r\n  constructor(\r\n    private readonly http: HttpClient,\r\n    public router: Router\r\n  ) {}\r\n\r\n  // inscription\r\n  signup(user: User) {\r\n    let api = `${this.endpoint}/register-user`\r\n    return this.http.post(api, user).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  // connexion\r\n  signin(user: User) {\r\n    return this.http\r\n          .post<any>(`${this.endpoint}/signin`, user)\r\n          .subscribe(\r\n            (res: any) => {\r\n              localStorage.setItem('access_token', res.token)\r\n              this.currentUser = this.getUserProfile(res._id)\r\n              this.router.navigate(['/profile/' + res.msg._id])\r\n          })\r\n  }\r\n\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token')\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = this.getToken()\r\n    return authToken !== null\r\n  }\r\n\r\n  doLogout() {\r\n    localStorage.removeItem('access_token')\r\n    this.router.navigate(['/connexion'])\r\n  }\r\n\r\n\r\n  // Récupère le profile utilisateur\r\n  getUserProfile(id: any) {\r\n    let api = `${this.endpoint}/user-profile/${id}`\r\n    return this.http.get(api, {headers: this.headers}).subscribe(\r\n      (res: any) => {\r\n        return res || {}\r\n      })\r\n  }\r\n\r\n\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg: string\r\n    if(error.error instanceof ErrorEvent){\r\n      msg = error.error.message\r\n    } else {\r\n      msg = `Error code: ${error.status}\\nMessage: ${error.message}`\r\n    }\r\n    return throwError(() => new Error(msg))\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAIjF,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;AAMzD,OAAM,MAAOC,WAAW;EAMtBC,YACmBC,IAAgB,EAC1BC,MAAc;IADJ,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,MAAM,GAANA,MAAM;IANf,KAAAC,QAAQ,GAAW,2BAA2B;IAC9C,KAAAC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACnE,KAAAC,WAAW,GAAG,EAAE;EAKb;EAEH;EACAC,MAAMA,CAACC,IAAU;IACf,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACN,QAAQ,gBAAgB;IAC1C,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAACD,GAAG,EAAED,IAAI,CAAC,CAACG,IAAI,CAACd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAAC;EACrE;EAEA;EACAC,MAAMA,CAACL,IAAU;IACf,OAAO,IAAI,CAACP,IAAI,CACTS,IAAI,CAAM,GAAG,IAAI,CAACP,QAAQ,SAAS,EAAEK,IAAI,CAAC,CAC1CM,SAAS,CACPC,GAAQ,IAAI;MACXC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,GAAG,CAACG,KAAK,CAAC;MAC/C,IAAI,CAACZ,WAAW,GAAG,IAAI,CAACa,cAAc,CAACJ,GAAG,CAACK,GAAG,CAAC;MAC/C,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,WAAW,GAAGN,GAAG,CAACO,GAAG,CAACF,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC;EACV;EAGAG,QAAQA,CAAA;IACN,OAAOP,YAAY,CAACQ,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAG,IAAI,CAACH,QAAQ,EAAE;IAC/B,OAAOG,SAAS,KAAK,IAAI;EAC3B;EAEAC,QAAQA,CAAA;IACNX,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC;IACvC,IAAI,CAAC1B,MAAM,CAACmB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAGA;EACAF,cAAcA,CAACU,EAAO;IACpB,IAAIpB,GAAG,GAAG,GAAG,IAAI,CAACN,QAAQ,iBAAiB0B,EAAE,EAAE;IAC/C,OAAO,IAAI,CAAC5B,IAAI,CAAC6B,GAAG,CAACrB,GAAG,EAAE;MAACL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC,CAACU,SAAS,CACzDC,GAAQ,IAAI;MACX,OAAOA,GAAG,IAAI,EAAE;IAClB,CAAC,CAAC;EACN;EAIAH,WAAWA,CAACmB,KAAwB;IAClC,IAAIT,GAAW;IACf,IAAGS,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAC;MACnCV,GAAG,GAAGS,KAAK,CAACA,KAAK,CAACE,OAAO;KAC1B,MAAM;MACLX,GAAG,GAAG,eAAeS,KAAK,CAACG,MAAM,cAAcH,KAAK,CAACE,OAAO,EAAE;;IAEhE,OAAOnC,UAAU,CAAC,MAAM,IAAIqC,KAAK,CAACb,GAAG,CAAC,CAAC;EACzC;EAAC,QAAAc,CAAA,G;qBAhEUrC,WAAW,EAAAsC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5C,WAAW;IAAA6C,OAAA,EAAX7C,WAAW,CAAA8C,IAAA;IAAAC,UAAA,EAHV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
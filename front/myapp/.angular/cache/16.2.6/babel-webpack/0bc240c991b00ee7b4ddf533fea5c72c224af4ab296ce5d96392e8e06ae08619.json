{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction InscriptionComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const langue_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", langue_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(langue_r1);\n  }\n}\nexport class InscriptionComponent {\n  constructor() {\n    this.langues = ['Français', 'English'];\n  }\n  ngOnInit() {\n    this.createFormControl();\n    this.createFormModel();\n    // this.language.setValue('choose')\n  }\n\n  createFormControl() {\n    this.email = new FormControl('');\n    this.password = new FormControl('');\n    this.confirmPassword = new FormControl('');\n    this.language = new FormControl('');\n    console.log(this.language);\n  }\n  createFormModel() {\n    this.monFormulaire = new FormGroup({\n      email: this.email,\n      password: this.password,\n      confirmPassword: this.confirmPassword,\n      language: this.language\n    });\n  }\n  static #_ = this.ɵfac = function InscriptionComponent_Factory(t) {\n    return new (t || InscriptionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InscriptionComponent,\n    selectors: [[\"app-inscription\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"green-border\"], [\"novalidate\", \"\", 3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"confirmPassword\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [\"id\", \"language\", \"formControlName\", \"language\", 1, \"form-control\", \"mt-3\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"], [3, \"value\"]],\n    template: function InscriptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"inscription works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Confirm password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 9)(17, \"option\", 10);\n        i0.ɵɵtext(18, \"--S\\u00E9lectionnez votre langue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, InscriptionComponent_option_19_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵtext(21, \"Envoyer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"pre\");\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"json\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.monFormulaire);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.langues);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 3, ctx.monFormulaire.value));\n      }\n    },\n    dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i1.JsonPipe],\n    styles: [\".green-border[_ngcontent-%COMP%] {\\n  border: 1px solid green;\\n  padding: 10px;\\n  margin-bottom: 20px;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3Jtcy9pbnNjcmlwdGlvbi9pbnNjcmlwdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JlZW4tYm9yZGVyIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","langue_r1","ɵɵadvance","ɵɵtextInterpolate","InscriptionComponent","constructor","langues","ngOnInit","createFormControl","createFormModel","email","password","confirmPassword","language","console","log","monFormulaire","_","_2","selectors","decls","vars","consts","template","InscriptionComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","InscriptionComponent_option_19_Template","ɵɵpipeBind1","value"],"sources":["C:\\Users\\jcran\\Desktop\\etudeAngular\\myapp\\src\\app\\components\\forms\\inscription\\inscription.component.ts","C:\\Users\\jcran\\Desktop\\etudeAngular\\myapp\\src\\app\\components\\forms\\inscription\\inscription.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.css']\n})\nexport class InscriptionComponent implements OnInit {\n  public langues: string[] = [\n    'Français',\n    'English'\n  ]\n\n  public monFormulaire!: FormGroup\n  public email!: FormControl\n  public password!: FormControl\n  public confirmPassword!: FormControl\n  public language!: FormControl\n\n\n  ngOnInit(): void {\n    this.createFormControl()\n    this.createFormModel()\n    // this.language.setValue('choose')\n  }\n\n\n  createFormControl() {\n    this.email = new FormControl('')\n    this.password = new FormControl('')\n    this.confirmPassword = new FormControl('')\n    this.language = new FormControl('')\n\n    console.log(this.language)\n  }\n\n  createFormModel() {\n    this.monFormulaire = new FormGroup({\n      email: this.email,\n      password: this.password,\n      confirmPassword: this.confirmPassword,\n      language: this.language\n    })\n  }\n\n\n\n\n}\n","<div class=\"green-border\">\n  <p>inscription works!</p>\n  <form [formGroup]=\"monFormulaire\" novalidate>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input\n        id=\"email\"\n        type=\"text\"\n        class=\"form-control\"\n        formControlName=\"email\"\n      >\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        class=\"form-control\"\n        formControlName=\"password\"\n      >\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Confirm password:</label>\n      <input\n        id=\"confirmPassword\"\n        type=\"password\"\n        class=\"form-control\"\n        formControlName=\"confirmPassword\"\n      >\n    </div>\n\n    <select\n      id=\"language\"\n      class=\"form-control mt-3\"\n      formControlName=\"language\"\n    >\n      <option value=\"\">--Sélectionnez votre langue</option>\n      <option *ngFor=\"let langue of langues\" [value]=\"langue\">{{ langue }}</option>\n\n    </select>\n\n     <button type=\"submit\" class=\"btn btn-primary mt-3\">Envoyer</button>\n\n     <pre>{{ monFormulaire.value | json }}</pre>\n  </form>\n</div>\n\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;ICuCjDC,EAAA,CAAAC,cAAA,iBAAwD;IAAAD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAtCH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IAACL,EAAA,CAAAM,SAAA,GAAY;IAAZN,EAAA,CAAAO,iBAAA,CAAAF,SAAA,CAAY;;;AD/B1E,OAAM,MAAOG,oBAAoB;EALjCC,YAAA;IAMS,KAAAC,OAAO,GAAa,CACzB,UAAU,EACV,SAAS,CACV;;EASDC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,eAAe,EAAE;IACtB;EACF;;EAGAD,iBAAiBA,CAAA;IACf,IAAI,CAACE,KAAK,GAAG,IAAIhB,WAAW,CAAC,EAAE,CAAC;IAChC,IAAI,CAACiB,QAAQ,GAAG,IAAIjB,WAAW,CAAC,EAAE,CAAC;IACnC,IAAI,CAACkB,eAAe,GAAG,IAAIlB,WAAW,CAAC,EAAE,CAAC;IAC1C,IAAI,CAACmB,QAAQ,GAAG,IAAInB,WAAW,CAAC,EAAE,CAAC;IAEnCoB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC5B;EAEAJ,eAAeA,CAAA;IACb,IAAI,CAACO,aAAa,GAAG,IAAIrB,SAAS,CAAC;MACjCe,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,QAAQ,EAAE,IAAI,CAACA;KAChB,CAAC;EACJ;EAAC,QAAAI,CAAA,G;qBApCUb,oBAAoB;EAAA;EAAA,QAAAc,EAAA,G;UAApBd,oBAAoB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTjC7B,EAAA,CAAAC,cAAA,aAA0B;QACrBD,EAAA,CAAAE,MAAA,yBAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACzBH,EAAA,CAAAC,cAAA,cAA6C;QAGtBD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACjCH,EAAA,CAAA+B,SAAA,eAKC;QACH/B,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAA+B,SAAA,gBAKC;QACH/B,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,cAAwB;QACOD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtDH,EAAA,CAAA+B,SAAA,gBAKC;QACH/B,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,iBAIC;QACkBD,EAAA,CAAAE,MAAA,wCAA2B;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrDH,EAAA,CAAAgC,UAAA,KAAAC,uCAAA,qBAA6E;QAE/EjC,EAAA,CAAAG,YAAA,EAAS;QAERH,EAAA,CAAAC,cAAA,kBAAmD;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEnEH,EAAA,CAAAC,cAAA,WAAK;QAAAD,EAAA,CAAAE,MAAA,IAAgC;;QAAAF,EAAA,CAAAG,YAAA,EAAM;;;QA5CxCH,EAAA,CAAAM,SAAA,GAA2B;QAA3BN,EAAA,CAAAI,UAAA,cAAA0B,GAAA,CAAAV,aAAA,CAA2B;QAsCFpB,EAAA,CAAAM,SAAA,IAAU;QAAVN,EAAA,CAAAI,UAAA,YAAA0B,GAAA,CAAApB,OAAA,CAAU;QAMjCV,EAAA,CAAAM,SAAA,GAAgC;QAAhCN,EAAA,CAAAO,iBAAA,CAAAP,EAAA,CAAAkC,WAAA,QAAAJ,GAAA,CAAAV,aAAA,CAAAe,KAAA,EAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isLoggedIn !== true) {\n      alert('Accès non autorisé');\n      this.router.navigate(['/connexion']);\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","next","state","isLoggedIn","alert","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcran\\Desktop\\angular-jwt\\front\\myapp\\src\\app\\middleware\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard\n{\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree\n  {\n    if(this.authService.isLoggedIn !== true) {\n      alert('Accès non autorisé')\n      this.router.navigate(['/connexion'])\n    }\n\n    return true\n  }\n}\n\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YACSC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEHC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAM1B,IAAG,IAAI,CAACJ,WAAW,CAACK,UAAU,KAAK,IAAI,EAAE;MACvCC,KAAK,CAAC,oBAAoB,CAAC;MAC3B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAGtC,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBArBUV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATjB,SAAS;IAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
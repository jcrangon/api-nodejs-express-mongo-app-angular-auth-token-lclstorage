{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiRoot = 'https://jsonplaceholder.typicode.com/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'content-type': 'application/json',\n    'Accept': 'text/html, application/xhtml+xml, */*'\n  }),\n  responseType: 'json'\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUsersAll() {\n    return this.http.get(`${apiRoot}users`, httpOptions);\n  }\n  getUserOne(id) {\n    return this.http.get(`${apiRoot}users/${id}`, httpOptions);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","apiRoot","httpOptions","headers","responseType","UserService","constructor","http","getUsersAll","get","getUserOne","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcran\\Desktop\\tts\\myapp\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\"\r\nimport { Injectable } from \"@angular/core\"\r\nimport { Observable } from \"rxjs\"\r\n\r\n\r\nconst apiRoot: string = 'https://jsonplaceholder.typicode.com/'\r\n\r\nconst httpOptions: any = {\r\n  headers: new HttpHeaders({\r\n    'content-type': 'application/json',\r\n    'Accept': 'text/html, application/xhtml+xml, */*'\r\n  }),\r\n  responseType: 'json' as 'json'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService\r\n{\r\n  constructor(\r\n    private http: HttpClient\r\n  ){}\r\n\r\n  getUsersAll(): Observable<object> {\r\n    return this.http.get(`${apiRoot}users`, httpOptions);\r\n  }\r\n\r\n  getUserOne(id: number): Observable<object> {\r\n    return this.http.get(`${apiRoot}users/${id}`, httpOptions)\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,OAAO,GAAW,uCAAuC;AAE/D,MAAMC,WAAW,GAAQ;EACvBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;GACX,CAAC;EACFI,YAAY,EAAE;CACf;AAMD,OAAM,MAAOC,WAAW;EAEtBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACZ;EAEFC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAGR,OAAO,OAAO,EAAEC,WAAW,CAAC;EACtD;EAEAQ,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,GAAGR,OAAO,SAASU,EAAE,EAAE,EAAET,WAAW,CAAC;EAC5D;EAAC,QAAAU,CAAA,G;qBAZUP,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAHV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}